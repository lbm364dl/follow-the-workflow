## R CMD Check

There is a standard tool that contains several steps ('checks') which every
project that wants to be a package uploaded to
[CRAN repositories](https://cran.r-project.org/) must pass. As part of our
code workflow, you are also responsible to make this check pass, as we will
also see in the
[Automatic checks on Pull Requests](#automatic-checks-on-pull-requests) section.
This check is known as 'R CMD check', and it is actually very easy to run:

```r
devtools::check()
```

The whole output of this call is rather long, since it lists all the
different checks it makes, but at the end, if there are no issues,
this is the output you should see:

```{r, fig.alt="Correct output of R CMD check", echo=FALSE}
knitr::include_graphics("imgs/r_cmd_check_pass.png")
```

OK, but if you just followed the steps in this guide and included our example
code from the [Writing code](#writing-code) and [Writing tests](#writing-tests)
sections, the above check should not have ended successfully with 0 errors,
and you probably see (among the really large output), some error like this:

```{r, fig.alt="Error no package called tidyr", echo=FALSE}
knitr::include_graphics("imgs/r_cmd_check_fail.png")
```

The problem here is that before performing the check on your package, it
must build it. And for that, it must know which other packages it has
as dependencies. Again, if you just followed everything from here, we never
got to do that, so your built package just does not include any other packages.
To fix this, we must have a quick look at the `DESCRIPTION` file.

```markdown
Package: whep
Title: What the Package Does (One Line, Title Case)
Version: 0.0.0.9000
Authors@R:
    person("First", "Last", , "first.last@example.com", role = c("aut", "cre"))
Description: What the package does (one paragraph).
License: MIT + file LICENSE
Imports:
    dplyr,
    tidyr
Encoding: UTF-8
Roxygen: list(markdown = TRUE)
RoxygenNote: 7.3.2
Suggests:
    knitr,
    rmarkdown,
    testthat (>= 3.0.0),
    tibble,
    ggplot2,
    here,
    googlesheets4
Config/testthat/edition: 3
VignetteBuilder: knitr
URL: https://eduaguilera.github.io/whep/
```

In the above file, the `Imports` section is where we should make sure we have
all dependencies for code which was saved specifically in the `R/` directory.
On the other hand, dependencies for code written in other places, such as
`tests/` or `vignettes/` (we will see this one in the following
[Writing articles](#writing-articles) section), should be included in the
`Suggests` section of the `DESCRIPTION` file. Together these two fields
tell everyone which dependencies our package needs to work correctly.
After adding these, you could run again `devtools::check()` and confirm
that it does not fail anymore (at least no errors).

We will not go into detail as to which checks are being performed. We will
all slowly learn about them whenever they show up as real issues in our code
when running the check tool. Just keep in mind that one of the important points
is that all the tests you write are also executed here, and the 'R CMD check'
also fails if one of your tests fail. If you really want to know more about
the checks, you can read, e.g.,
[this detailed list](https://r-pkgs.org/R-CMD-check.html).
